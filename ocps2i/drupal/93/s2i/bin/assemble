#!/bin/bash

set -e

source ${PHP_CONTAINER_SCRIPTS_PATH}/common.sh
shopt -s dotglob
echo "---> Installing application source..."
rm -fR /tmp/src/.git
mv /tmp/src/* ./

# Fix source directory permissions
fix-permissions ./
fix-permissions ${HTTPD_CONFIGURATION_PATH}
# Change the npm registry mirror if provided
if [ -n "$NPM_MIRROR" ]; then
	npm config set registry $NPM_MIRROR
fi
if [ -f composer.json ]; then
  echo "Found 'composer.json', installing dependencies using composer.phar... "

  # Install Composer
  TEMPFILE=$(mktemp)
  RETRIES=6
  for ((i=0; i<$RETRIES; i++)); do

    if [ -z "$COMPOSER_INSTALLER" ]; then
      export COMPOSER_INSTALLER="https://getcomposer.org/installer" | php
    fi

    echo "Downloading $COMPOSER_INSTALLER, attempt $((i+1))/$RETRIES"
    curl -o $TEMPFILE $COMPOSER_INSTALLER && break
    sleep 10
  done
  if [[ $i == $RETRIES ]]; then
    echo "Download failed, giving up."
    exit 1
  fi

  if [ -z $COMPOSER_VERSION ]; then
    echo "By default, latest composer will be used. If you want to use v1 please use the environment variable COMPOSER_VERSION=1"
    php <$TEMPFILE
  else
    echo "You set the COMPOSER_VERSION"
    php <$TEMPFILE -- --$COMPOSER_VERSION
  fi

  echo "################################"
  echo "####   INSTALLING DRUSH    #####"
  echo "################################"
  wget -O /usr/local/bin/robo https://github.com/consolidation/Robo/releases/download/1.0.4/robo.phar && chmod +x /usr/local/bin/robo \
  && wget -O /usr/local/bin/drush https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar && chmod +x /usr/local/bin/drush \
  && wget -q https://getcomposer.org/installer -O - | php -- --install-dir=/usr/local/bin --filename=composer

  #chmod +x /usr/local/bin/composer #not working
  echo "####   LISTING $pwd    #####"
  ls

  { # try
    echo "################################"
    echo "trying to install drupalconsole"
    echo "################################"
    wget -O /opt/app-root/src/drupal https://drupalconsole.com/installer && chmod +x /opt/app-root/src/drupal && /opt/app-root/src/drupal init

  } || { # catch
    # save log for exception


    {
      if [  -f /composer.phar ]; then
        echo "################################"
        echo "Installing drupalconsole using composer"
        echo "################################"

        ./composer.phar require drupal/console:~1.0
        ./composer.phar update


      fi
    }

  }

  if [ "$(ls -a /tmp/artifacts/ 2>/dev/null)" ]; then
    echo "Restoring build artifacts"
    mv /tmp/artifacts/* $HOME/
  fi

  # Change the repo mirror if provided
  if [ -n "$COMPOSER_MIRROR" ]; then
    ./composer.phar config -g repositories.packagist composer $COMPOSER_MIRROR
  fi

  # Install App dependencies using Composer
  ./composer.phar install --no-interaction --no-ansi --optimize-autoloader $COMPOSER_ARGS

  if [ ! -f composer.lock ]; then
    echo -e "\nConsider adding a 'composer.lock' file into your source repository.\n"
  fi

  echo "Run fix-permissions"
  fix-permissions ./

  echo "Make CONFIGURATION DIRECTORY: SYNC"
  mkdir -p /opt/app-root/src/$DOCUMENTROOT/sites/default/files/config_dir/sync


  echo "Copying settings file to drupal"
  cp /opt/app-root/etc/drupal/settings.php /opt/app-root/src/$DOCUMENTROOT/sites/default/settings.php


  echo "Fix source directory permissions"
  # envvar  DOCUMENTROOT
  mkdir -p /opt/app-root/src/$DOCUMENTROOT/sites/default/files
  chmod 755 -R /opt/app-root/src/$DOCUMENTROOT/sites/default/
  chmod 777 -R /opt/app-root/src/$DOCUMENTROOT/sites/default/files
  #chgrp -Rv 1001 sites/default/files
  #chmod 2775 sites/default/files
  chmod 440 /opt/app-root/src/$DOCUMENTROOT/sites/default/settings.php
fi

# post-assemble files
process_extending_files ./php-post-assemble/ ${PHP_CONTAINER_SCRIPTS_PATH}/post-assemble/

# Fix source directory permissions
fix-permissions ./
fix-permissions ${HTTPD_CONFIGURATION_PATH}