#!/bin/bash
#
# Run mongod in a StatefulSet-based replica set. See
# https://github.com/sclorg/mongodb-container/blob/master/examples/petset/README.md
# for a description of how this is intended to work.
#
# Note:
# - It does not attempt to remove the host from the replica set configuration
#   when it is terminating. That is by design, because, in a StatefulSet, when a
#   pod/container terminates and is restarted by OpenShift, it will always have
#   the same hostname. Removing hosts from the configuration affects replica set
#   elections and can impact the replica set stability.

set -o errexit
set -o nounset
set -o pipefail

# Concatenate shared files
share_files=( $( find "${CONTAINER_SCRIPTS_PATH}" -type f -name '*.sh' -not -path "*${CONTAINER_SCRIPTS_PATH}/test-functions.sh" ) )

# Load libraries into current shell
for share_file in "${share_files[@]}"; do
	source "${share_file}"
done

unset share_files share_file

function cleanup() {
	if [[ -n "${MONGODB_REPLICA_NAME-}" ]]; then
		mongo_remove
	fi

	echo "=> Shutting down MongoDB server ..."
	pkill -INT mongod || :
	wait_for_mongo_down
	exit 0
}

trap 'cleanup' SIGINT SIGTERM

if [[ -n "${MONGODB_REPLICA_NAME-}" ]]; then
	REPLICATION=1	check_env_vars
else
	check_env_vars
fi

setup_wiredtiger_cache ${CONTAINER_SCRIPTS_PATH}/mongodb.conf.template

# If user provides own config file use it and do not generate new one
if [[ ! -s "${MONGODB_CONFIG_PATH}" ]]; then
	# Generate config file for MongoDB
	envsubst < "${CONTAINER_SCRIPTS_PATH}/mongodb.conf.template" > "${MONGODB_CONFIG_PATH}"
fi

mongo_common_args="-f $MONGODB_CONFIG_PATH"
setup_default_datadir

if [[ -n "${MONGODB_REPLICA_NAME-}" ]]; then
	# Cache for cleanup
	cache_container_addr

	# [NOTE] May modify MONGODB_CONFIG_PATH
	setup_keyfile

	# [TODO] Capture exit code of `replicaset` and exit with an error if the
	# initialization failed, so that the container will be restarted and the
	# user can gain more visibility that there is a problem in a way other than
	# just inspecting log messages.
	replicaset &

	# Run `mongod` in a subshell because MONGODB_ADMIN_PASSWORD should still be
	# defined when the trapped call to `cleanup` references it.
	(
	# Make sure env variables don't propagate to mongod process.
	unset MONGODB_USER MONGODB_PASSWORD MONGODB_DATABASE MONGODB_ADMIN_PASSWORD

	mongod $mongo_common_args --replSet "${MONGODB_REPLICA_NAME}"
	) &
	wait
else
	standalone
fi
