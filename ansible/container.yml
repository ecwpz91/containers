version: "2"
settings:

  conductor:
    # The Conductor container does the heavy lifting, and provides a portable
    # Python runtime for building your target containers. It should be derived
    # from the same distribution as you're building your target containers with.
    base: centos:7
    # roles_path:   # Specify a local path containing Ansible roles
    volumes:
    - temp-space:/tmp   # Used to copy static content between containers
    # environment:  # List or mapping of environment variables

  # Set the name of the project. Defaults to basename of the project directory.
  # For built services, concatenated with service name to form the built image name.
  # project_name:

  # The deployment_output_path is mounted to the Conductor container, and the
  # `run` and `deployment` commands then write generated Ansible playbooks to it.
  # deployment_output_path: ./ansible-deployment

  # When using the k8s or openshift engines, use the following to authorize with the API.
  # Values set here will be passed to the Ansible modules. Any file paths will be mounted
  # to the conductor container, allowing the `run` command to access the API.
  #k8s_auth:
    # path to a K8s config file
    #config_file:
    # name of a context found within the config file
    #context:
    # URL for accessing the K8s API
    #host:
    # An API authentication token
    #api_key:
    # Path to a ca cert file
    #ssl_ca_cert:
    # Path to a cert file
    #cert_file:
    # Path to a key file
    #key_file:
    # boolean, indicating if SSL certs should be validated
    #verify_ssl:

  # When using the k8s or openshift engines, use the following to set the namespace.
  # If not set, the project name will be used. For openshift, the namespace maps to a project,
  # and description and display_name are supported.
  #k8s_namespace:
  #  name:
  #  description:
  #  display_name:


defaults:
  JBOSS_HOME: /home/jboss
  JBOSS_USER: jboss

services:
  # Add your containers here, specifying the base image you want to build from.
  # To use this example, uncomment it and delete the curly braces after services key.
  # You may need to run `docker pull ubuntu:trusty` for this to work.

  # web:
  #   from: "centos:7"
  #   ports:
  #     - "80:80"
  #   command: ["/usr/bin/dumb-init", "/usr/sbin/apache2ctl", "-D", "FOREGROUND"]
  #   dev_overrides:
  #     environment:
  #       - "DEBUG=1"

  jboss:
    from: centos:7
    roles:
    - role: jboss
    maintainer: Michael Surbey <msurbey@redhat.com>
    environment:
      JBOSS_IMAGE_NAME: jboss-base-7/base
      JBOSS_IMAGE_VERSION: 1.1
      JBOSS_IMAGE_RELEASE: 1
      JBOSS_HOME: "{{ JBOSS_HOME }}"
    labels:
      Name: "{{ lookup('env', 'JBOSS_IMAGE_NAME') }}"
      Version: "{{ lookup('env', 'JBOSS_IMAGE_VERSION') }}"
      Release: "{{ lookup('env', 'JBOSS_IMAGE_RELEASE') }}"
      Architecture: x86_64
      BZComponent: jboss-base-7-base-docker
    user: "{{ JBOSS_USER }}"
    working_dir: "{{ JBOSS_HOME }}"

registries: {}
  # Add optional registries used for deployment. For example:
  #  google:
  #    url: https://gcr.io
  #    namespace: my-cool-project-xxxxxx
